//物体碰撞检测
HelloWorldScene.h
//继承b2ContactListener类，来使用监听功能
class HelloWorld : public cocos2d::Layer，public b2ContactListener
{
//重写开始链接方法
virtual void BeginContact(b2Contact* contact);
}
HelloWorldScene.cpp
bool HelloWorld::init()
{
//***********
	//后面出了各种错误就在于我把这段注释了，导致堆栈错误，就这个原因，卡了我一个礼拜
	//创建了一个物理世界，加速度向下
	world = new b2World(b2Vec(0,-10));
	//设置一个连接监听器
	world->SetContactListener(this);
	
	addRect();
	//这是动态物体，与之前一样，将会落下
	addRect(5,3,b2_dynamicBody);
	//这是漂浮物体，不会落下
	//addRect(1,5,b2_kinematicBody);
	addGround();
}

void HelloWorld::BeginContact(b2Contact* contact)
{
	//GetFixtureA和GetFixtureB是连接的两个对象的fixture，这里判断只要其中一个是地板，那么就可以输出监听
	if(contact->GetFixtureA()->GetBody()==groundBody||contact->GetFixtureB()->GetBody()==groundBody)
		log("有物体落在地板上");
}

void HelloWorld::addRect(float PositionX,float PositionY,b2BodyType type)
{
	//config box2d
	b2BodyDef def;
	def.position = b2Vec2(PositionX,PositionY);
	//给动态物体设置一个初速度，y方向10米
	def.linearVelocity = b2Vec2(0,10);
	def.type = type;
	b2Body* body = world->CreateBody(&def);

	b2PolygonShape shape;
	shape.SetAsBox(0.5,0.5);

	b2FixtureDef fixtureDef;
	fixtureDef.density = 1;
	fixtureDef.friction = 0.3;
	fixtureDef.shape = &shape;
	body->CreateFixture(&fixtureDef);
	//config cocos shape
	auto s = Sprite::create();
	s->setTextureRect(Rect(0,0,0.5*2*RADIO,0.5*2*RADIO));
	addChild(s);

	//setPosition(Point(def.position.x*RADIO,def.position.y*RADIO));
	body->SetUserData(s);
	
}