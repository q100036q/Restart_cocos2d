//执行顺序
int main.cpp
{
	//创建应用程序实例
	AppDelegate app;
	//取得到实例并执行
    return Application::getInstance()->run();
}


AppDelegate.cpp
//完成应用程序并启动
//功能：切换场景
bool AppDelegate::applicationDidFinishLanching()
{
	//初始化导演，窗口
    auto director = Director::getInstance();
    auto glview = director->getOpenGLView();
    if(!glview) {
        glview = GLView::create("My Game");
        //设置呈现视图
		director->setOpenGLView(glview);
    }

    //打开显示帧，显示在左下角的数据
    director->setDisplayStats(true);

    //设置帧频。不设置的话，默认值是1.0/60
    director->setAnimationInterval(1.0 / 60);

    //创建一个场景。这是一个autorelease对象 
    auto scene = HelloWorld::createScene();

    //执行第一个场景
    director->runWithScene(scene);
	//呈现其他场景的话
	director->repleaseScene(scene);

    return true;
}

HelloWorldScene.cpp
//创建场景
Scene* HelloWorld::createScene()
{
    // “场景”是一个autorelease对象
    auto scene = Scene::create();
    
    // “层”是一个autorelease对象
    auto layer = HelloWorld::create();

    // 添加该层作为子场景
    scene->addChild(layer);

    // 返回场景
    return scene;
}

//初始化实例
bool HelloWorld::init()
{
    //////////////////////////////
    // 1. super init first
    if ( !Layer::init() )
    {
        return false;
    }
    
    Size visibleSize = Director::getInstance()->getVisibleSize();
    Vec2 origin = Director::getInstance()->getVisibleOrigin();

    /////////////////////////////
    // 2. add a menu item with "X" image, which is clicked to quit the program
    //    you may modify it.

    // add a "close" icon to exit the progress. it's an autorelease object
	//这是一个关闭按钮
    auto closeItem = MenuItemImage::create(
                                           "CloseNormal.png",
                                           "CloseSelected.png",
                                           CC_CALLBACK_1(HelloWorld::menuCloseCallback, this));
    
	closeItem->setPosition(Vec2(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,
                                origin.y + closeItem->getContentSize().height/2));

    // create menu, it's an autorelease object
    auto menu = Menu::create(closeItem, NULL);
    menu->setPosition(Vec2::ZERO);
    this->addChild(menu, 1);

    /////////////////////////////
    // 3. add your codes below...

    // add a label shows "Hello World"
    // create and initialize a label
    // 初始化标签
    auto label = LabelTTF::create("Hello World", "Arial", 24);
    
    // 标签在屏幕的中心位置
    label->setPosition(Vec2(origin.x + visibleSize.width/2,
                            origin.y + visibleSize.height - label->getContentSize().height));

    // 把这个标签添加到当前层上（层级为1）
    this->addChild(label, 1);

    // 初始化精灵为HelloWorld图片
    auto sprite = Sprite::create("HelloWorld.png");

    // 把图片放在屏幕中心
    sprite->setPosition(Vec2(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

    // 把这个精灵添加到最底层上（层级为0）
    this->addChild(sprite, 0);
    
    return true;
}

//菜单的回调函数，点击菜单项，调用
void HelloWorld::menuCloseCallback(Ref* pSender)
{
//在WP8情况下
#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)
	MessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
    return;
#endif

    Director::getInstance()->end();
//在IOS情况下
#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
    exit(0);
#endif
}

